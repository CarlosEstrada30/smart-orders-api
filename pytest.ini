[tool:pytest]
# Configuración de pytest para smart-orders-api

# Directorio donde están los tests
testpaths = tests

# Patrones de archivos de test
python_files = test_*.py *_test.py

# Patrones de clases de test
python_classes = Test* *Tests

# Patrones de funciones de test
python_functions = test_*

# Markers personalizados
markers =
    unit: Unit tests que no requieren base de datos
    integration: Integration tests que prueban múltiples componentes
    database: Tests que requieren acceso a base de datos
    slow: Tests que pueden tardar mucho tiempo
    api: Tests de endpoints de la API
    auth: Tests relacionados con autenticación
    tenant: Tests relacionados con funcionalidad multitenant

# Configuración de output
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes

# Configuración para tests asíncronos
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Directorio de cache de pytest
cache_dir = .pytest_cache

# Configuración de logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filtros para warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
